name: Maven Package deployment to Maven Central

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type: major, minor, patch'
        required: true
        default: 'minor'

jobs:
  validate-input:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.release_type != 'patch' }}
#        && github.event.inputs.release_type != 'minor'
#        && github.event.inputs.release_type != 'patch' }}
    steps:
      - name: Invalid input sent.
        run: |
          echo "Invalid input [${{ github.event.inputs.release_type }}] selected."
          exit 1

#  prepare-release-major-snapshot:
#    needs:
#      - validate-input
#    runs-on: ubuntu-latest
#    if: ${{ github.event.inputs.release_type == 'major' }}
#    steps:
#      - name: Check out Git repository
#        uses: actions/checkout@v2
#      - name: Install Java and Maven
#        uses: actions/setup-java@v2
#        with:
#          java-version: '15'
#          distribution: 'adopt'
#      - name: Restore local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ github.sha }}
#      - name: Maven command to update Major snapshot version
#        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.nextMajorVersion}.0.0-SNAPSHOT versions:commit
#      - name: Upload target folder
#        uses: actions/upload-artifact@v2
#        with:
#          name: target
#          path: |
#            ${{ github.workspace }}/target
#            ${{ github.workspace }}/pom.xml

#  prepare-release-minor-snapshot:
#    needs:
#      - validate-input
#    runs-on: ubuntu-latest
#    if: ${{ github.event.inputs.release_type == 'minor' }}
#    steps:
#      - name: Check out Git repository
#        uses: actions/checkout@v2
#      - name: Install Java and Maven
#        uses: actions/setup-java@v2
#        with:
#          java-version: '15'
#          distribution: 'adopt'
#      - name: Restore local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ github.sha }}
#      - name: Maven command to update Minor snapshot version
#        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.0-SNAPSHOT versions:commit
#      - name: Upload target folder
#        uses: actions/upload-artifact@v2
#        with:
#          name: target
#          path: |
#            ${{ github.workspace }}/target
#            ${{ github.workspace }}/pom.xml

  prepare-release-patch-snapshot:
    needs:
      - validate-input
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.release_type == 'patch' }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Restore local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
      - name: Maven command to update Patch snapshot version
        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT versions:commit
      - name: Upload target folder
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: |
            ${{ github.workspace }}/target
            ${{ github.workspace }}/pom.xml

  release-patch-snapshot:
    runs-on: ubuntu-latest
    needs:
      - prepare-release-patch-snapshot
    env:
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Restore local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
      - name: Download target folder
        uses: actions/download-artifact@v2
        with:
          name: target
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          maven_profiles: release
          server_id: ossrh
          maven_args: --settings ${{ github.workspace }}/setting/settings.xml -DskipTests -Dcheckstyle.skip -B

#  prepare-release-major:
#    needs:
#      - validate-input
#    runs-on: ubuntu-latest
#    if: ${{ github.event.inputs.release_type == 'major' }}
#    steps:
#      - name: Check out Git repository
#        uses: actions/checkout@v2
#      - name: Install Java and Maven
#        uses: actions/setup-java@v2
#        with:
#          java-version: '15'
#          distribution: 'adopt'
#      - name: Restore local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ github.sha }}
#      - name: Maven command to update Major snapshot version
#        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.0.0 versions:commit
#      - name: Upload target folder
#        uses: actions/upload-artifact@v2
#        with:
#          name: target
#          path: |
#            ${{ github.workspace }}/target
#            ${{ github.workspace }}/pom.xml

#  prepare-release-minor:
#    needs:
#      - validate-input
#    runs-on: ubuntu-latest
#    if: ${{ github.event.inputs.release_type == 'minor' }}
#    steps:
#      - name: Check out Git repository
#        uses: actions/checkout@v2
#      - name: Install Java and Maven
#        uses: actions/setup-java@v2
#        with:
#          java-version: '15'
#          distribution: 'adopt'
#      - name: Restore local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ github.sha }}
#      - name: Maven command to update Minor snapshot version
#        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.0 versions:commit
#      - name: Upload target folder
#        uses: actions/upload-artifact@v2
#        with:
#          name: target
#          path: |
#            ${{ github.workspace }}/target
#            ${{ github.workspace }}/pom.xml

  prepare-release-patch:
    needs:
      - release-patch-snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Restore local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
      - name: Maven command to update Patch snapshot version
        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion} versions:commit
      - name: Upload target folder
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: |
            ${{ github.workspace }}/target
            ${{ github.workspace }}/pom.xml

  release-patch:
    runs-on: ubuntu-latest
    needs:
      - prepare-release-patch
    env:
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Restore local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
      - name: Download target folder
        uses: actions/download-artifact@v2
        with:
          name: target
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          maven_profiles: release
          server_id: ossrh
          maven_args: --settings ${{ github.workspace }}/settings/settings.xml -DskipTests -Dcheckstyle.skip -B


#      - name: Setup GPG
#        run: |
#          echo "gpg --passphrase \"\$GPG_PASSPHRASE\" --batch --no-tty \"\$@\"" > ./gpg-ci
#          chmod 755 ./gpg-ci
#          echo $GPG_PRIVATE_KEY | gpg --batch --no-tty --import --yes
#
#      - name: Setup Git
#        run: |
#          git config user.name $GITHUB_USER_NAME
#          git config user.email $GITHUB_USER_EMAIL
#          git config gpg.program "./gpg-ci"
#          git config commit.gpgsign true
#          git config user.signingkey $GPG_SIGNING_KEY
